# To enable ProGuard in your project, edit project.properties
# to define the proguard.config property as described in that file.
#
# Add project specific ProGuard rules here.
# By default, the flags in this file are appended to flags specified
# in ${sdk.dir}/tools/proguard/proguard-android.txt
# You can edit the include path and order by changing the ProGuard
# include property in project.properties.
#
# For more details, see
#   http://developer.android.com/guide/developing/tools/proguard.html

# Add any project specific keep options here:

# If your project uses WebView with JS, uncomment the following
# and specify the fully qualified class name to the JavaScript interface
# class:
#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
#   public *;
#}

# Needed by google-api-client to keep generic types and @Key annotations accessed via reflection

-keepclassmembers class * {
 @com.google.api.client.util.Key <fields>;
}
-keepattributes Signature,RuntimeVisibleAnnotations,AnnotationDefault

# Needed by Guava

-dontwarn sun.misc.Unsafe

# See https://groups.google.com/forum/#!topic/guava-discuss/YCZzeCiIVoI
#-dontwarn com.google.common.collect.MinMaxPriorityQueue

-keep class android.os.Parcelable.Creator
# -keep class com.google.android.gms.location.ActivityRecognitionResult
#-keep class com.google.** {*;}
#-keep interface com.google.** { *;}
-dontwarn com.google.android.gms.**
-keep class com.google.api.** { *; }
#-keep class com.google.api.client.** { *; }
-dontwarn com.google.api.client.json.JsonEncoding

-keep class org.acra.** {*;}

-optimizationpasses 5
-dontusemixedcaseclassnames
-dontskipnonpubliclibraryclasses

#To remove debug logs
-assumenosideeffects class android.util.Log {
    public static *** d(...);
    public static *** v(...);
}

# -optimizations !code/simplification/arithmetic,!field/*,!class/merging/*
#-dontwarn sun.misc.Unsafe, java.lang.management.ManagementFactory, org.codehaus.jackson.JsonParser, org.json.JSONObject, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.JsonFactory, com.google.common.collect.MinMaxPriorityQueue

#-dontoptimize
-dontpreverify
-verbose

#-keepattributes *Annotation*,EnclosingMethod
-keep public class com.google.vending.licensing.ILicensingService
-keep public class com.android.vending.licensing.ILicensingService

# For native methods, see http://proguard.sourceforge.net/manual/examples.html#native
-keepclasseswithmembernames class * {
    native <methods>;
}

# keep setters in Views so that animations can still work.
# see http://proguard.sourceforge.net/manual/examples.html#beans
-keepclassmembers public class * extends android.view.View {
   void set*(***);
   *** get*();
}
#-keep class reflection.using.package.name.** { *; }

# We want to keep methods in Activity that could be used in the XML attribute onClick
-keepclassmembers class * extends android.app.Activity {
   public void *(android.view.View);
}

# -keepclassmembers class * extends android.app.ListActivity {
   # public void *(android.view.View);
# }
# For enumeration classes, see http://proguard.sourceforge.net/manual/examples.html#enumerations
-keepclassmembers enum * {
    public static **[] values();
    public static ** valueOf(java.lang.String);
}

# -keep class * implements android.os.Parcelable {
  # public static final android.os.Parcelable$Creator *;
# }
# -keepclassmembers class * implements java.io.Serializable {
    # static final long serialVersionUID;
    # private static final java.io.ObjectStreamField[] serialPersistentFields;
    # private void writeObject(java.io.ObjectOutputStream);
    # private void readObject(java.io.ObjectInputStream);
    # java.lang.Object writeReplace();
    # java.lang.Object readResolve();
# }
-keepclassmembers class **.R$* {
    public static <fields>;
}

# The support library contains references to newer platform versions.
# Don't warn about those in case this app is linking against an older
# platform version.  We know about them, and they are safe.
-dontwarn android.support.**

# -keepclasseswithmembers class * {
    # public <init>(android.content.Context, android.util.AttributeSet);
# }
# 
# -keepclasseswithmembers class * {
    # public <init>(android.content.Context, android.util.AttributeSet, int);
# }